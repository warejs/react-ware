{"version":3,"sources":["webpack:///./src/components/ui/combotext/Combotext.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className","metastring","docz__WEBPACK_IMPORTED_MODULE_2__","__position","__code","__scope","Rw","_components__WEBPACK_IMPORTED_MODULE_3__","Combotext","default","options","label","value","onChange","console","log","concat","Math","random","placeholder","callback","option","event","of"],"mappings":"mgDAMqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKH,MAA9BW,EADDD,EACCC,WAAeX,EADhBY,EAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GACzBE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,iBAAvD,iBACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,sBACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,CAACoB,UAAY,eAAeC,WAAa,OAA7G,uCAE3CR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAM,qMAO5BC,QAAS,CAACzB,MAAOG,KAAOA,KAAKH,MAAQA,EAAM0B,MAAKN,UAAU,kCAC7DP,EAAAC,EAAAC,cAACY,EAAA,GAAMC,UAAP,CACEC,QAAS,EACTC,QAAS,CACP,CAAEC,MAAO,SAAUC,MAAO,SAC1B,CAAED,MAAO,SAAUC,MAAO,UAE5BC,SAAU,SAAAD,GAAK,OAAIE,QAAQC,IAAI,YAAaH,OAGhDnB,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,4LACAE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAM,gOAAAY,OAKkC,IAAhBC,KAAKC,SALvB,kGAQ5Bb,QAAS,CAACzB,MAAOG,KAAOA,KAAKH,MAAQA,EAAM0B,MAAKN,UAAU,kCAC7DP,EAAAC,EAAAC,cAACY,EAAA,GAAMC,UAAP,CACEW,YAAY,iBACZT,QAAS,CACP,CAAEC,MAAO,QAASC,MAAO,IACzB,CAAED,MAAO,mBAAoBS,SAAU,SAACR,GAAD,OAAWA,EAAQ,SAC1D,CAAED,MAAO,eAAgBS,SAAU,oBAAAJ,OAAwB,IAAdC,KAAKC,aAEpDL,SAAU,SAACD,EAAOS,EAAQC,GAAhB,OAA0BR,QAAQC,IAAI,YAAaH,EAAOS,OAGxE5B,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYqB,GAAIjB,KAAME","file":"static/js/components-ui-combotext-combotext.b345e2d7.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz'\nimport * as Rw from '../../../components';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"ui-combotext\"}}>{`UI: Combotext`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Text and dropdown.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"metastring\":null}}>{`import * as RW from 'reactware';\n`}</MDXTag></MDXTag>\n<Playground __position={0} __code={`<Rw.UI.Combotext\n  default={1}\n  options={[\n    { label: \\'100 px\\', value: \\'100px\\' },\n    { label: \\'200 px\\', value: \\'200px\\' },\n  ]}\n  onChange={value => console.log(\\'selected1\\', value)}\n/>`} __scope={{props: this ? this.props : props,Rw}} className=\"Rw_UI_Buttons_Split dark_theme\">\n  <Rw.UI.Combotext\n    default={1} \n    options={[\n      { label: '100 px', value: '100px' },\n      { label: '200 px', value: '200px' },\n    ]}\n    onChange={value => console.log(\"selected1\", value)}\n  />\n</Playground>\n<MDXTag name=\"p\" components={components}>{`In a more complicated example, we can pass a option callback once a option is selected. The current value is the first paramater and the return value is what will inputed into the box.`}</MDXTag>\n<Playground __position={1} __code={`<Rw.UI.Combotext\n  placeholder=\"Placeholder...\"\n  options={[\n    { label: \\'Reset\\', value: \\'\\' },\n    { label: \\'Add \"int\" to end\\', callback: value => value + \\'-ing\\' },\n    { label: \\'Random Value\\', callback: () => \\`${Math.random() * 100}\\` },\n  ]}\n  onChange={(value, option, event) => console.log(\\'selected2\\', value, option)}\n/>`} __scope={{props: this ? this.props : props,Rw}} className=\"Rw_UI_Buttons_Split dark_theme\">\n  <Rw.UI.Combotext\n    placeholder=\"Placeholder...\"\n    options={[\n      { label: 'Reset', value: '' },\n      { label: 'Add \"int\" to end', callback: (value) => value + \"-ing\" },\n      { label: 'Random Value', callback: () => (`${Math.random()*100}`) }\n    ]}\n    onChange={(value, option, event) => console.log(\"selected2\", value, option)}\n  />\n</Playground>\n<PropsTable of={Rw.UI.Combotext} />\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}