(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"./src/components/ui/button/Button.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return f});var o=n("./node_modules/react/index.js"),a=n.n(o),c=n("./node_modules/@mdx-js/tag/dist/index.js"),r=n("./node_modules/docz/dist/index.m.js"),l=n("./src/components/index.js");function s(e){return(s="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}function p(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function u(e,t){return!t||"object"!==s(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=u(this,m(t).call(this,e))).layout=null,n}var n,o,s;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(t,a.a.Component),n=t,(o=[{key:"render",value:function(){var e=this.props,t=e.components,n=i(e,["components"]);return a.a.createElement(c.MDXTag,{name:"wrapper",components:t},a.a.createElement(c.MDXTag,{name:"h1",components:t,props:{id:"ui-buttons"}},"UI: Buttons"),a.a.createElement(c.MDXTag,{name:"h2",components:t,props:{id:"button"}},"Button"),a.a.createElement(c.MDXTag,{name:"p",components:t},"Button control which can be clicked upon to perform an action"),a.a.createElement(c.MDXTag,{name:"pre",components:t},a.a.createElement(c.MDXTag,{name:"code",components:t,parentName:"pre",props:{className:"language-jsx",metastring:null}},"import * as RW from 'reactware';\n")),a.a.createElement(r.e,{__codesandbox:"undefined",__position:0,__code:"<Rw.UI.Button onClick={event => console.log('I was clicked')}>\n  Action\n</Rw.UI.Button>",__scope:{props:this?this.props:n,Rw:l},className:"Rw_UI_Button dark_theme"},a.a.createElement(l.UI.Button,{onClick:function(e){return console.log("I was clicked")}},"Action")),a.a.createElement(r.f,{of:l.UI.Button}),a.a.createElement(c.MDXTag,{name:"h2",components:t,props:{id:"checkbox"}},"Checkbox"),a.a.createElement(c.MDXTag,{name:"p",components:t},"Radio Button control which can be clicked upon to enable or disable an option"),a.a.createElement(r.e,{__codesandbox:"undefined",__position:2,__code:'<Rw.UI.Buttons.Checkbox\n  label="Show Overlays"\n  onChange={(checked, e) => console.log(checked)}\n/>',__scope:{props:this?this.props:n,Rw:l},className:"Rw_UI_Buttons_Checkbox dark_theme"},a.a.createElement(l.UI.Buttons.Checkbox,{label:"Show Overlays",onChange:function(e,t){return console.log(e)}})),a.a.createElement(r.f,{of:l.UI.Buttons.Checkbox}),a.a.createElement(c.MDXTag,{name:"h2",components:t,props:{id:"cycle"}},"Cycle"),a.a.createElement(c.MDXTag,{name:"p",components:t},"Cycle button is a button that cycles its content through two or more values"),a.a.createElement(r.e,{__codesandbox:"undefined",__position:4,__code:"<Rw.UI.Buttons.Cycle\n  default={1}\n  options={['state 1', 'state 2', 'state 3']}\n  onCycle={(index, option, event) => console.log('selected', index, option)}\n/>",__scope:{props:this?this.props:n,Rw:l},className:"Rw_UI_Buttons_Cycle dark_theme"},a.a.createElement(l.UI.Buttons.Cycle,{default:1,options:["state 1","state 2","state 3"],onCycle:function(e,t,n){return console.log("selected",e,t)}})),a.a.createElement(r.f,{of:l.UI.Buttons.Cycle}),a.a.createElement(c.MDXTag,{name:"h2",components:t,props:{id:"radio"}},"Radio"),a.a.createElement(c.MDXTag,{name:"p",components:t},"Radio Button control which can be clicked upon to select one option from a selection of options"),a.a.createElement(r.e,{__codesandbox:"undefined",__position:6,__code:"<Rw.UI.Buttons.Radio\n  options={['hey', 'there', 'blue', 'cow']}\n  onChange={index => console.log('onChange', index)}\n/>",__scope:{props:this?this.props:n,Rw:l},className:"Rw_UI_Buttons_Radio dark_theme"},a.a.createElement(l.UI.Buttons.Radio,{options:["hey","there","blue","cow"],onChange:function(e){return console.log("onChange",e)}})),a.a.createElement(r.f,{of:l.UI.Buttons.Radio}),a.a.createElement(c.MDXTag,{name:"h2",components:t,props:{id:"split"}},"Split"),a.a.createElement(c.MDXTag,{name:"p",components:t},"Split Button control combining a button (typically invoking some default action)."),a.a.createElement(r.e,{__codesandbox:"undefined",__position:8,__code:"<Rw.UI.Buttons.Split\n  default={1}\n  options={[\n    { label: 'Save', onClick: () => alert('saved') },\n    { label: 'Publish', onClick: () => alert('published') },\n    { label: 'Exit', onClick: () => alert('edit') },\n  ]}\n  onSelect={(index, option) => alert('selected', index, option)}\n/>",__scope:{props:this?this.props:n,Rw:l},className:"Rw_UI_Buttons_Split dark_theme"},a.a.createElement(l.UI.Buttons.Split,{default:1,options:[{label:"Save",onClick:function(){return alert("saved")}},{label:"Publish",onClick:function(){return alert("published")}},{label:"Exit",onClick:function(){return alert("edit")}}],onSelect:function(e,t){return alert("selected",e,t)}})),a.a.createElement(r.f,{of:l.UI.Buttons.Split}),a.a.createElement(c.MDXTag,{name:"h2",components:t,props:{id:"toggle"}},"Toggle"),a.a.createElement(c.MDXTag,{name:"p",components:t},"Split Button control combining a button (typically invoking some default action)."),a.a.createElement(r.e,{__codesandbox:"undefined",__position:10,__code:"<Rw.UI.Buttons.Toggle\n  enabled={true}\n  onToggle={(state, event) => console.log(state, event)}\n>\n  Dance Time\n</Rw.UI.Buttons.Toggle>",__scope:{props:this?this.props:n,Rw:l},className:"Rw_UI_Buttons_Toggle dark_theme"},a.a.createElement(l.UI.Buttons.Toggle,{enabled:!0,onToggle:function(e,t){return console.log(e,t)}},"Dance Time")),a.a.createElement(r.f,{of:l.UI.Buttons.Toggle}))}}])&&p(n.prototype,o),s&&p(n,s),t}();f.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=components-ui-button-button.ce70252cfef042ba1907.js.map